name: Release Binary and .deb (Debian Build)

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build_on_debian:
    runs-on: ubuntu-latest

    container:
      image: debian:bullseye

    steps:
      - name: Install prerequisites in container
        run: |
          apt-get update
          # build-essential for C compilers, git for checkout, curl for rustup,
          # pkg-config and libssl-dev are common Rust build dependencies
          apt-get install -y --no-install-recommends \
            build-essential \
            git \
            curl \
            pkg-config \
            libssl-dev

      - name: Checkout
        uses: actions/checkout@v4 # Use a newer version of checkout

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Build binary
        run: cargo build --release

      - name: Build .deb package
        run: cargo deb

      - name: Verify .deb package and binary
        run: |
          echo "--- Contents of target/release ---"
          ls -l target/release/
          echo "--- Contents of target/debian ---"
          ls -l target/debian/
          echo "--- Checking GLIBC dependencies of the binary ---"
          ldd target/release/custom-ospf || echo "ldd command failed, binary might be static or not found"

      - name: Upload binary and .deb to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/release/custom-ospf
            target/debian/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}